@model Capstone.Models.OrderModel

@{
    ViewBag.Title = "Order";
}




@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class=" page-header">
            <div class=" btn-toolbar pull-right">
                <div class=" btn-group">
                    @if (new string[] { "Bogey@email.com", "user2", "user3" }.Contains(this.User.Identity.Name))
                {
                        <button type="button" class=" eButton">Edit Form</button>
                    }
                </div>
            </div>
            <h2>Order Form</h2>
            <fieldset>
                <div class='row'>
                    <div class='col-sm-4'>
                        <div class='form-group'>
                            <label for="user_title">Date</label>
                            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class='col-sm-4'>
                        <div class='form-group'>
                            <label for="user_firstname">Number of Badges</label>
                            @Html.EditorFor(model => model.NumBadge, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NumBadge, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
         
            </fieldset>
        </div>
    </div>


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class=" form-group row">
            <label for="smFormGroupInput" class="col-sm-2 col-form-label col-form-label-sm">Account Number:</label>
            <div class="col-sm-10">
                <div class="input-group">
                    @Html.EditorFor(model => model.AccountNbr, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AccountNbr, "", new { @class = "text-danger" })
                    <span class="input-group-btn">

                        @if (new string[] { "Bogey@email.com", "user2", "user3" }.Contains(this.User.Identity.Name))
                        {
                            <button class="btn btn-default" type="button">Edit Field</button>
                        }
                    </span>
                </div>
            </div>
        </div>

        <div class=" form-group row">
            <label for="smFormGroupInput" class="col-sm-2 col-form-label col-form-label-sm">Account Name 1:</label>
            <div class="col-sm-10">
                <div class="input-group">
                    @Html.EditorFor(model => model.AccountName1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AccountName1, "", new { @class = "text-danger" })
                    <span class="input-group-btn">

                        @if (new string[] { "Bogey@email.com", "user2", "user3" }.Contains(this.User.Identity.Name))
                        {
                            <button class="btn btn-default" type="button">Edit Field</button>
                        }
                    </span>
                </div>
            </div>
        </div>

        <div class=" form-group row">
            <label for="smFormGroupInput" class="col-sm-2 col-form-label col-form-label-sm">Account Name 2:</label>
            <div class="col-sm-10">
                <div class="input-group">
                    @Html.EditorFor(model => model.AccountName2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AccountName2, "", new { @class = "text-danger" })
                    <span class="input-group-btn">

                        @if (new string[] { "Bogey@email.com", "user2", "user3" }.Contains(this.User.Identity.Name))
                        {
                            <button class="btn btn-default" type="button">Edit Field</button>
                        }
                    </span>
                </div>
            </div>
        </div>

        <div class=" form-group row">
            <label for="smFormGroupInput" class="col-sm-2 col-form-label col-form-label-sm">First Name:</label>
            <div class="col-sm-10">
                <div class="input-group">
                    @Html.EditorFor(model => model.Fname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Fname, "", new { @class = "text-danger" })
                    <span class="input-group-btn">

                        @if (new string[] { "Bogey@email.com", "user2", "user3" }.Contains(this.User.Identity.Name))
                        {
                            <button class="btn btn-default" type="button">Edit Field</button>
                        }
                    </span>
                </div>
            </div>
        </div>

        <div class=" form-group row">
            <label for="smFormGroupInput" class="col-sm-2 col-form-label col-form-label-sm">Last Name:</label>
            <div class="col-sm-10">
                <div class="input-group">
                    @Html.EditorFor(model => model.Lname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Lname, "", new { @class = "text-danger" })
                    <span class="input-group-btn">

                        @if (new string[] { "Bogey@email.com", "user2", "user3" }.Contains(this.User.Identity.Name))
                        {
                            <button class="btn btn-default" type="button">Edit Field</button>
                        }
                    </span>
                </div>
            </div>
        </div>

        <div class=" form-group row">
            <label for="smFormGroupInput" class="col-sm-2 col-form-label col-form-label-sm">ID Number:</label>
            <div class="col-sm-10">
                <div class="input-group">
                    @Html.EditorFor(model => model.IDNbr, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IDNbr, "", new { @class = "text-danger" })
                    <span class="input-group-btn">

                        @if (new string[] { "Bogey@email.com", "user2", "user3" }.Contains(this.User.Identity.Name))
                        {
                            <button class="btn btn-default" type="button">Edit Field</button>
                        }
                    </span>
                </div>
            </div>
        </div>

        <div class=" form-group row">
            <label for="smFormGroupInput" class="col-sm-2 col-form-label col-form-label-sm">Holder Type:</label>
            <div class="col-sm-10">
                <div class="input-group">
                    @Html.EditorFor(model => model.HolderType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HolderType, "", new { @class = "text-danger" })
                    <span class="input-group-btn">

                        @if (new string[] { "Bogey@email.com", "user2", "user3" }.Contains(this.User.Identity.Name))
                        {
                            <button class="btn btn-default" type="button">Edit Field</button>
                        }
                    </span>
                </div>
            </div>
        </div>

        <div class=" form-group row">
            <label for="smFormGroupInput" class="col-sm-2 col-form-label col-form-label-sm">Neutron:</label>
            <div class="col-sm-10">
                <div class="input-group">
                    @Html.EditorFor(model => model.Neutron, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Neutron, "", new { @class = "text-danger" })
                    <span class="input-group-btn">

                        @if (new string[] { "Bogey@email.com", "user2", "user3" }.Contains(this.User.Identity.Name))
                        {
                            <button class="btn btn-default" type="button">Edit Field</button>
                        }
                    </span>
                </div>
            </div>
        </div>

        <div class=" form-group row">
            <label for="smFormGroupInput" class="col-sm-2 col-form-label col-form-label-sm">Wear Location:</label>
            <div class="col-sm-10">
                <div class="input-group">
                    @Html.EditorFor(model => model.WLocation, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.WLocation, "", new { @class = "text-danger" })
                    <span class="input-group-btn">

                        @if (new string[] { "Bogey@email.com", "user2", "user3" }.Contains(this.User.Identity.Name))
                        {
                            <button class="btn btn-default" type="button">Edit Field</button>
                        }
                    </span>
                </div>
            </div>
        </div>

        <div class=" form-group row">
            <label for="smFormGroupInput" class="col-sm-2 col-form-label col-form-label-sm">Use Period Description:</label>
            <div class="col-sm-10">
                <div class="input-group">
                    @Html.EditorFor(model => model.UPD, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UPD, "", new { @class = "text-danger" })
                    <span class="input-group-btn">

                        @if (new string[] { "Bogey@email.com", "user2", "user3" }.Contains(this.User.Identity.Name))
                        {
                            <button class="btn btn-default" type="button">Edit Field</button>
                        }
                    </span>
                </div>
            </div>
        </div>

        <div class=" form-group row">
            <label for="smFormGroupInput" class="col-sm-2 col-form-label col-form-label-sm">Series Name:</label>
            <div class="col-sm-10">
                <div class="input-group">
                    @Html.EditorFor(model => model.Sname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Sname, "", new { @class = "text-danger" })
                    <span class="input-group-btn">

                        @if (new string[] { "Bogey@email.com", "user2", "user3" }.Contains(this.User.Identity.Name))
                        {
                            <button class="btn btn-default" type="button">Edit Field</button>
                        }
                    </span>
                </div>
            </div>
        </div>

        <div class=" form-group row">
            <label for="smFormGroupInput" class="col-sm-2 col-form-label col-form-label-sm">Clip Type:</label>
            <div class="col-sm-10">
                <div class="input-group">
                    @Html.DropDownList("ClipType", new List<SelectListItem>
               {
                   new SelectListItem {Text = "SL - Slotted Clip", Value = "SL"},
                   new SelectListItem {Text = "AL - Slotted Clip", Value = "AL"}
               })
                    <span class="input-group-btn">

                        @if (new string[] { "Bogey@email.com", "user2", "user3" }.Contains(this.User.Identity.Name))
                        {
                            <button class="btn btn-default" type="button">Edit Field</button>
                        }
                    </span>
                </div>
            </div>
        </div>

        <div class=" form-group row">
            <label for="smFormGroupInput" class="col-sm-2 col-form-label col-form-label-sm">Series Color:</label>
            <div class="col-sm-10">
                <div class="input-group">
                    @Html.DropDownList("SeriesColor", new List<SelectListItem>
               {
                   new SelectListItem {Text = "GR- Green", Value = "GR"},
                   new SelectListItem {Text = "BL - Blue", Value = "BL"},
                   new SelectListItem {Text = "LB - Light Blue", Value = "LB"},
                   new SelectListItem {Text = "NO - None", Value = "NO"},
                   new SelectListItem {Text = "OR - Orange", Value = "OR"},
                   new SelectListItem {Text = "PP - Purple", Value = "PP"},
                   new SelectListItem {Text = "RD - Red", Value = "RD"}
               })
                    <span class="input-group-btn">

                        @if (new string[] { "Bogey@email.com", "user2", "user3" }.Contains(this.User.Identity.Name))
                        {
                            <button class="btn btn-default" type="button">Edit Field</button>
                        }
                    </span>
                </div>
            </div>
        </div>

        <div class=" form-group row">
            <label for="smFormGroupInput" class="col-sm-2 col-form-label col-form-label-sm">Frequency Color:</label>
            <div class="col-sm-10">
                <div class="input-group">
                    @Html.DropDownList("FreqColor", new List<SelectListItem>
               {
                   new SelectListItem {Text = "GR- Green", Value = "GR"},
                   new SelectListItem {Text = "BL - Blue", Value = "BL"},
                   new SelectListItem {Text = "LB - Light Blue", Value = "LB"},
                   new SelectListItem {Text = "NO - None", Value = "NO"},
                   new SelectListItem {Text = "OR - Orange", Value = "OR"},
                   new SelectListItem {Text = "PP - Purple", Value = "PP"},
                   new SelectListItem {Text = "RD - Red", Value = "RD"}
               })
                    <span class="input-group-btn">

                        @if (new string[] { "Bogey@email.com", "user2", "user3" }.Contains(this.User.Identity.Name))
                        {
                            <button class="btn btn-default" type="button">Edit Field</button>
                        }
                    </span>
                </div>
            </div>
        </div>

        <div class=" form-group row">
            <label for="smFormGroupInput" class="col-sm-2 col-form-label col-form-label-sm">Badge Use:</label>
            <div class="col-sm-10">
                <div class="input-group">
                    @Html.DropDownList("BadgeUse", new List<SelectListItem>
               {
                   new SelectListItem {Text = "PA - Participant", Value = "PA"},
                   new SelectListItem {Text = "AR - Area Monitor", Value = "AR"},
                   new SelectListItem {Text = "CO - Control", Value = "CO"}
               })
                   
                    <span class="input-group-btn">

                        @if (new string[] { "Bogey@email.com", "user2", "user3" }.Contains(this.User.Identity.Name))
                        {
                            <button class="btn btn-default" type="button">Edit Field</button>
                        }
                    </span>
                </div>
            </div>
        </div>

                    <div class="form-group row">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Submit" class="btn btn-default" />
                        </div>
                    </div>
                    }



                    @section Scripts {
                        @Scripts.Render("~/bundles/jqueryval")
                    }
